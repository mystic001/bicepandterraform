name: Bicep Deployment

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'bicep/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

jobs:
  pre-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check deployment approval
        if: github.event.inputs.environment == 'prod'
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: admin1,admin2
          minimum-approvals: 2
          timeout-minutes: 30

  deploy:
    needs: pre-deploy
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}
    
    steps:
      - uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Install Bicep CLI using Azure CLI
      - name: Install Bicep CLI
        run: |
          az bicep install
          az bicep version

      # Validate Bicep files
      - name: Validate Bicep templates
        run: |
          bicep build ./bicep/main.bicep

      # Deploy using main template and parameter file
      - name: Deploy Bicep template
        uses: azure/arm-deploy@v1
        with:
          scope: subscription
          subscriptionId: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}
          # resourceGroupName: ${{ format('rg-{0}', github.event.inputs.environment || 'dev') }}
          region: ${{ secrets.AZURE_LOCATION }}
          template: ./bicep/main.bicep
          parameters: ./bicep/parameters/${{ github.event.inputs.environment || 'dev' }}.parameters.json
          # deploymentName: ${{ format('bicep-deploy-{0}-{1}', github.event.inputs.environment || 'dev', github.run_number) }}
          # parameters: "./bicep/parameters/${{ github.event.inputs.environment || 'dev' }}.parameters.json"
          failOnStdErr: true

  post-deploy:
    needs: deploy
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Run Post-Deployment Validation
        shell: pwsh
        run: |
          Write-Host "Running Bicep post-deployment validation..."
          # Add validation scripts here

      - name: Notify Deployment Status
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const success = context.job.status === 'success';
            const environment = '${{ github.event.inputs.environment || 'dev' }}';
            const message = `Bicep deployment to ${environment} ${success ? 'succeeded' : 'failed'}`;
            
            if (context.issue.number) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.name,
                body: message
              });
            } 